# The udp_port_number parameter specifies the lower UDP
# port used to communicate between Clients and Servers.
# The upper port is lower port + 1.
udp_port_number:            8888

# The tcp_port_number parameter is the port that the
# Server Browser User Interface listens for HTTP
# requests on.
tcp_port_number:            7777

# Servers broadcast heartbeat messages using the address
# specified by the udp_broadcast_address parameter.
udp_broadcast_address:      192.168.1.255

# The client_timeout parameter specifies the time (in
# milliseconds) before a Server declares a Client as
# no longer alive.  The Server will generate an alert
# if this happens.
client_timeout:             180000

# The client_remove_time parameter specifies the time
# after which a 'dead' Client (ie. inactive) is removed
# from the Server's watchlist.
client_remove_time:         300000

# Servers send heartbeat messages every heartbeat_interval
# milliseconds.
heartbeat_interval:         5000

# The Server logs alerts to the filename specified by
# the disk_log_name parameter.
disk_log_name:              server.log

# If the Server alert log file exceeds disk_log_size bytes,
# then it will have a .1 appended to its file name and
# a new file created for future logging.
disk_log_size:              100000000

# The following four parameters specify the time
# (in milliseconds) that Red, Amber or Green-tagged
# alerts remain visible in the Browser UI for
# specific categories of alert.
ui_display_time_ALL:        125000
ui_display_time_PROCESS:    65000
ui_display_time_FILE:       600000
ui_display_time_IDLE:       75000

# This parameter specifies which tags should be attached
# to the alerts generated by the Server if a Client
# fails to provide regular updates.
dead_client_tags:           DEAD_CLIENT,RED

# This parameter specifies which tags should be attached
# to the alerts generated by the Server if a configuration
# file cannot be found for a new Client.
no_config_tags:             NO_CLIENT_CONFIG,AMBER

# Use "udp_unicast_address" the directive in order to
# instruct the server to send heartbeat messages to
# specific IP addresses in addition to broadcasting them.
# "udp_unicast_address" is a comma-separated list
# of IP addresses.  This facility is used
# when Clients sit on different network segments from
# Servers, or for environments which don't support
# UDP broadcast - eg. AWS.

# udp_unicast_address:      10.1.1.8

# The "secondary_servers" directive contains the ip address
# of a server which will be sent FT_SECONDARY messages
# periodically.  The server targeted will then log these
# messages.  This allows one server of a pair (where the directive
# is configured) to be considered the primary, and the other
# server in the pair secondary.  Scripts consuming the server
# log file can suppress their actions if they see an FT_SECONDARY
# message.  An example of the way this facility is used would be
# for a pair of servers which have a pair of email alert dispatch
# Python scripts consuming their log files.  For each Client
# alert, normally both Python scripts would see alerts and
# recipients would receive two emails.  However, the Python
# script could suppress email dispatch if it has recently
# seen an FT_SECONDARY alert.  As only one server would be
# logging FT_SECONDARY, only one Python script would be actively
# dispatching emails (the instance of the script running on
# the primary server - the one with "secondary_servers"
# configured.  If the primary server is closed down, then the
# secondary server will stop receiving FT_SECONDARY messages and
# it's Python script can resume dispatching emails.

# secondary_server:           192.168.1.210

# The "launch" directive allows the Uhoh Server to run a
# sub-process.  This is used when the Uhoh Server needs to
# run a selection of processes on start-up.
# launch:                     scripts/run_all_processes.sh
